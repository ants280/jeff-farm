<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.ants280</groupId>
	<artifactId>jeff-farm-ws</artifactId>
	<name>jeff-farm-ws</name>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<sonar.java.libraries>target/classes</sonar.java.libraries>
		<main.class>com.github.ants280.jeff.farm.ws.Main</main.class>
		<tomcat.version>8.5.40</tomcat.version>
		<liquibase.version>3.5.5</liquibase.version>
		<servlet.name>jeff-farm-ws Jersey Web Application</servlet.name>
		<servlet.url.prefix>/jeff-farm-ws</servlet.url.prefix>
		<jdbc.driver.name>postgresql</jdbc.driver.name>
		<jdbc.driver.group.id>org.postgresql</jdbc.driver.group.id>
		<jdbc.driver.artifact.id>postgresql</jdbc.driver.artifact.id>
		<jdbc.driver.version>42.2.5</jdbc.driver.version>
		<jdbc.driver.class.name>org.postgresql.Driver</jdbc.driver.class.name>
		<resource.data.source.name>jdbc/jeff-farm-data-source</resource.data.source.name> <!-- also in InjectionBinder.java -->
		<resource.data.source.auth>Container</resource.data.source.auth>
		<resource.data.source.type>javax.sql.DataSource</resource.data.source.type>
		<credential.handler.algorithm>SHA-256</credential.handler.algorithm>
		<credential.handler.iterations>1000</credential.handler.iterations>
		<credential.handler.salt.length>8</credential.handler.salt.length>
		<security.role.user>user</security.role.user>
		<!--derived properties (potentially overwritten by profiles-->
		<site.origin>http://localhost:4200</site.origin>
		<server.scheme>http</server.scheme>
		<server.host>localhost</server.host>
		<server.port>8080</server.port>
		<jdbc.host>localhost</jdbc.host>
		<jdbc.port>5432</jdbc.port>
		<jdbc.database>jeff_farm_db</jdbc.database>
		<jdbc.username>farmer</jdbc.username>
		<jdbc.password>flint5+0N3</jdbc.password>
		<jdbc.url>Should be overwritten by set-jdbc-url profile.</jdbc.url>
		<!--computed properties (keep last)-->
		<jdbc.url>jdbc:${jdbc.driver.name}://${jdbc.host}:${jdbc.port}/${jdbc.database}?serverTimezone=UTC</jdbc.url>
	</properties>
	<profiles>
		<profile>
			<!--load the environmental properties on production if DATABASE_URL is set-->
			<id>production</id>
			<activation>
				<property>
					<name>env.DATABASE_URL</name>
				</property>
			</activation>
			<properties>
				<!--suppress UnresolvedMavenProperty -->
				<site.origin>${env.SITE_ORIGIN}</site.origin>
				<!--suppress UnresolvedMavenProperty -->
				<server.scheme>${env.SERVER_SCHEME}</server.scheme>
				<!--suppress UnresolvedMavenProperty -->
				<server.host>${env.SERVER_HOST}</server.host>
				<!--suppress UnresolvedMavenProperty -->
				<server.port>${env.SERVER_PORT}</server.port>
				<!--suppress UnresolvedMavenProperty -->
				<jdbc.host>${env.JDBC_HOST}</jdbc.host>
				<!--suppress UnresolvedMavenProperty -->
				<jdbc.port>${env.JDBC_PORT}</jdbc.port>
				<!--suppress UnresolvedMavenProperty -->
				<jdbc.database>${env.JDBC_DATABASE}</jdbc.database>
				<!--suppress UnresolvedMavenProperty -->
				<jdbc.username>${env.JDBC_USERNAME}</jdbc.username>
				<!--suppress UnresolvedMavenProperty -->
				<jdbc.password>${env.JDBC_PASSWORD}</jdbc.password>
				<!--computed properties (keep last)-->
				<jdbc.url>jdbc:${jdbc.driver.name}://${jdbc.host}:${jdbc.port}/${jdbc.database}?serverTimezone=UTC</jdbc.url>
			</properties>
		</profile>
	</profiles>
	<build>
		<!-- mvn -DremoveSnapshot versions:set && mvn clean package && mvn versions:set -DnextSnapshot=true -->
		<plugins>
			<plugin>
				<!-- mvn versions:display-plugin-updates -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.0.5</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<compilerArgs>
						<!--strict mode-->
						<arg>-Xlint:unchecked</arg>
					</compilerArgs>
					<!--set the correct java versions-->
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<!--include version numbers in jar-->
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
			<plugin>
				<!-- (from super-pom) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<!--evaluate assertions in tests-->
					<enableAssertions>true</enableAssertions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<!--write maven properties to file-->
						<id>create-app-properties</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.outputDirectory}/app.properties</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!--mvn liquibase:update-->
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${liquibase.version}</version>
				<configuration>
					<driver>${jdbc.driver.class.name}</driver>
					<url>${jdbc.url}</url>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<changeLogFile>${project.basedir}/src/main/sql/dbchangelog.xml</changeLogFile>
				</configuration>
			</plugin>
			<plugin>
				<!--Build, Test, and Run the code with `mvn install test exec:java`-->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<mainClass>${main.class}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<!--create jar with dependencies-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>${main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- for test coverage (with sonar) -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<executions>
					<execution>
						<id>pre-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.liquibase</groupId>
									<artifactId>liquibase-core</artifactId>
									<version>${liquibase.version}</version>
									<destFileName>liquibase.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>${jdbc.driver.group.id}</groupId>
									<artifactId>${jdbc.driver.artifact.id}</artifactId>
									<version>${jdbc.driver.version}</version>
									<destFileName>jdbc_driver.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/webapp/META-INF</directory>
				<filtering>true</filtering>
				<targetPath>META-INF</targetPath>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/webapp/WEB-INF</directory>
				<filtering>true</filtering>
				<targetPath>WEB-INF</targetPath>
			</resource>
		</resources>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>2.28</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<!--javax.servlet-->
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<!--JspServlet (added by Tomcat.initWebappDefaults)-->
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>${tomcat.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!--BasicDataSourceFactory (DataSource lookup)-->
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-dbcp</artifactId>
			<version>${tomcat.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!--database access-->
			<groupId>${jdbc.driver.group.id}</groupId>
			<artifactId>${jdbc.driver.artifact.id}</artifactId>
			<version>${jdbc.driver.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!--ServletContainer-->
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!--injection-->
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
		</dependency>
		<dependency>
			<!--Jsonb,JsonbBuilder-->
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-binding</artifactId>
		</dependency>

		<dependency>
			<!--test api-->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!--object mocking framework-->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!--JerseyTest-->
			<groupId>org.glassfish.jersey.test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!--GrizzlyTestContainerFactory (used by JerseyTest)-->
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>
</project>
